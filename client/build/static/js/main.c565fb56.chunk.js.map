{"version":3,"sources":["components/arena/UI/versus.png","services/requestHelper.js","services/domainRequest/auth.js","services/localStorageHelper.js","services/authService.js","components/signIn/index.jsx","services/domainRequest/userRequest.js","components/signUp/index.jsx","components/signInUpPage/index.jsx","services/domainRequest/fightersRequest.js","components/newFighter/index.jsx","components/fighter/index.jsx","components/arena/ArenaComponent.jsx","components/arena/showWinner.js","components/arena/constants/controls.js","services/domainRequest/fightRequest.js","components/arena/fightHelpers/fight.js","components/arena/index.js","components/fight/index.jsx","components/signOut/index.jsx","components/startScreen/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","get","entityName","a","id","makeRequest","post","body","path","method","url","fetch","JSON","stringify","undefined","headers","res","json","dataObj","ok","alert","message","console","error","login","setLocalStorageItem","key","val","value","localStorage","setItem","isSignedIn","data","getItem","parse","getObjectFromLocalStorage","setLoginSession","user","useStyles","makeStyles","theme","root","margin","spacing","width","SignIn","setIsLoggedIn","classes","useState","email","setEmail","password","setPassword","onSubmit","className","noValidate","autoComplete","onChange","event","target","label","placeholder","type","Button","onClick","variant","color","createUser","SignUp","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","signPages","SignInSignUpPage","state","index","setIndex","setState","this","props","React","getFighters","createFighter","NewFighter","onCreated","name","setName","power","setPower","defense","setDefense","Number","formControl","minWidth","selectEmpty","marginTop","Fighter","fightersList","onFighterSelect","selectedFighter","fighter","setFighter","length","FormControl","InputLabel","Select","labelId","map","it","health","ArenaComponent","fighter1Name","fighter2Name","onKeyDown","firstFighterBar","secondFighterBar","showDamage","tabIndex","e","ref","src","image","alt","title","showWinner","winner","window","location","reload","controls","sendLog","getDamage","attacker","defender","damage","criticalHitChance","min","max","Math","random","getHitPower","dodgeChance","getBlockPower","onKeydown","atacker","fighterHealthLeft","style","innerHTML","toFixed","fighterHealthInPercents","healthBar","barWidthInPercents","criticalDamage","set","cooldown","currentTime","Date","now","clear","critical","Arena","fighter1","fighter2","setWinner","player","fightStartedAt","logging","log","setLog","firstPlayerComboCooldown","secondPlayerComboCooldown","fightersCooldown","setCooldown","useRef","pressed","Set","PlayerOneAttack","PlayerOneBlock","PlayerTwoAttack","PlayerTwoBlock","PlayerOneCriticalHitCombination","PlayerTwoCriticalHitCombination","q","w","u","i","o","firstFighterHealthLeft","secondFighterHealthLeft","fightersHealthLeft","setFightersHealthLeft","sendLogs","push","getWinner","writeLog","healthLeft","useEffect","current","combo","add","which","has","document","addEventListener","delete","Fight","fighters","fightStarted","warning","onFightStart","onCreate","onFighter1Select","onFighter2Select","getFighter1List","filter","getFighter2List","Component","SignOut","onSignOut","StartScreen","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c565fb56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/versus.0a6375c6.png\";","//const apiUrl = 'http://localhost:3050/api';\r\nconst apiUrl = '/api';\r\n\r\nexport const get = async (entityName, id = '') => {\r\n    return await makeRequest(`${entityName}/${id}`, 'GET');\r\n}\r\n\r\nexport const post = async (entityName, body) => {\r\n    return await makeRequest(entityName, 'POST', body);\r\n}\r\n\r\nexport const put = async (entityName, id, body) => {\r\n    return await makeRequest(`${entityName}/${id}`, 'PUT', body);\r\n}\r\n\r\nexport const deleteReq = async (entityName, id) => {\r\n    return await makeRequest(`${entityName}/${id}`, 'DELETE');\r\n}\r\n\r\nconst makeRequest = async (path, method, body) => {\r\n    try {\r\n        const url = `${apiUrl}/${path}`\r\n        const res = await fetch(url, {\r\n            method,\r\n            body: body ? JSON.stringify(body) : undefined,\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        });\r\n\r\n        const dataObj = await res.json();\r\n\r\n        if (res.ok) {\r\n            return dataObj;\r\n        }\r\n\r\n        alert(`${dataObj.message}`);\r\n        return dataObj;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","import { post } from \"../requestHelper\"\r\n\r\nexport const login = async (body) => {\r\n    return await post('auth/login', body);\r\n}","export const setLocalStorageItem = (key, val) => {\r\n    const value = typeof val === 'object' ? JSON.stringify(val) : val;\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport const getObjectFromLocalStorage = (key) => {\r\n    const data = localStorage.getItem(key);\r\n    if(data) {\r\n        return JSON.parse(data);\r\n    }\r\n    return null;\r\n}","import { setLocalStorageItem, getObjectFromLocalStorage } from \"./localStorageHelper\";\r\n\r\nexport const isSignedIn = () => {\r\n    const user = getObjectFromLocalStorage('user');\r\n    return user ? true : false;\r\n};\r\n\r\nexport const setLoginSession = (user) => {\r\n    setLocalStorageItem('user', user);\r\n}\r\n\r\nexport const unsetLoginSession = () => {\r\n    setLocalStorageItem('user', null);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'material-ui';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './signIn.css';\r\nimport { login } from '../../services/domainRequest/auth';\r\nimport { setLoginSession } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SignIn({ setIsLoggedIn }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const data = await login({ email, password });\r\n        if(data && !data.error) {\r\n            setLoginSession(data);\r\n            setIsLoggedIn(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\r\n            <TextField onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        </form>\r\n    )\r\n}","import { post } from \"../requestHelper\";\r\nconst entity = 'users'\r\n\r\nexport const createUser = async (body) => {\r\n    return await post(entity, body);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'material-ui';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { createUser } from '../../services/domainRequest/userRequest';\r\nimport { setLoginSession } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SignUp({ setIsLoggedIn }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [phoneNumber, setPhoneNumber] = useState();\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onFirstNameChange = (event) => {\r\n        setFirstName(event.target.value);\r\n    }\r\n\r\n    const onLastNameChange = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n\r\n    const onPhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value);\r\n    }\r\n    \r\n\r\n    const onSubmit = async () => {\r\n        const data = await createUser({ email, password, firstName, lastName, phoneNumber });\r\n        if(data && !data.error) {\r\n            setLoginSession(data);\r\n            setIsLoggedIn(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField key=\"first-name\" onChange={onFirstNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"First Name\"/>\r\n            <TextField key=\"last-name\" onChange={onLastNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Last Name\"/>\r\n            <TextField key=\"email\" onChange={onEmailChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Email\"/>\r\n            <TextField key=\"phone\" onChange={onPhoneNumberChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Phone Number\"/>\r\n            <TextField key=\"password\" onChange={onPasswordChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Password\" type=\"password\"/>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Sign Up</Button>\r\n        </form>\r\n    )\r\n}","import * as React from 'react';\r\nimport './signInUpPage.css';\r\nimport SignIn from '../signIn';\r\nimport SignUp from '../signUp';\r\n\r\nconst signPages = {\r\n    signIn: 0,\r\n    signUp: 1\r\n};\r\n\r\nclass SignInSignUpPage extends React.Component {\r\n    state = {\r\n        index: signPages.signUp\r\n    };\r\n\r\n    setIndex = (index) => {\r\n        this.setState({ index });\r\n    }\r\n\r\n    render() {\r\n        const { index } = this.state;\r\n\r\n        return (\r\n            <div id=\"sign-in-up\">\r\n                <div id=\"form-wrapper\">\r\n                    <div className=\"header\">\r\n                        <div onClick={() => this.setIndex(signPages.signIn)} className={`${index === signPages.signIn ? 'active' : ''}`}>Sign In</div>\r\n                        <div onClick={() => this.setIndex(signPages.signUp)} className={`${index === signPages.signUp ? 'active' : ''}`}>Sign Up</div>\r\n                    </div>\r\n                    {index === signPages.signIn ? <SignIn setIsLoggedIn={this.props.setIsLoggedIn} /> : <SignUp setIsLoggedIn={this.props.setIsLoggedIn}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignInSignUpPage;","import { get, post } from \"../requestHelper\";\r\n\r\nconst entity = 'fighters';\r\n\r\nexport const getFighters = async () => {\r\n    return await get(entity);\r\n}\r\n\r\nexport const createFighter = async (body) => {\r\n    return await post(entity, body);\r\n} ","import { TextField } from \"material-ui\"\r\nimport { createFighter } from \"../../services/domainRequest/fightersRequest\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport './newFighter.css';\r\n\r\nexport default function NewFighter({ onCreated }) {\r\n    const [name, setName] = useState();\r\n    const [power, setPower] = useState();\r\n    const [defense, setDefense] = useState();\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onPowerChange = (event) => {\r\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\r\n        setPower(value);\r\n    }\r\n\r\n    const onDefenseChange = (event) => {\r\n        const value = event.target.value || event.target.value === 0 ? Number(event.target.value) : null;\r\n        setDefense(value);\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const data = await createFighter({ name, power, defense });\r\n        if(data && !data.error) {\r\n            onCreated(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"new-fighter\">\r\n            <div>New Fighter</div>\r\n            <TextField onChange={onNameChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Name\"/>\r\n            <TextField onChange={onPowerChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Power\" type=\"number\" />\r\n            <TextField onChange={onDefenseChange} id=\"standard-basic\" label=\"Standard\" placeholder=\"Defense\" type=\"number\" />\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, Select } from '@material-ui/core';\r\nimport { MenuItem } from 'material-ui';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Fighter({ fightersList, onFighterSelect, selectedFighter }) {\r\n    const classes = useStyles();\r\n    const [fighter, setFighter] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        setFighter(event.target.value);\r\n        onFighterSelect(event.target.value);\r\n    };\r\n\r\n    return !fightersList.length ? (<p className='center'>Список пуст</p>) : (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"simple-select-label\">Select Fighter</InputLabel>\r\n                <Select\r\n                    labelId=\"simple-select-label\"\r\n                    id=\"simple-select\"\r\n                    value={fighter}\r\n                    onChange={handleChange} \r\n                >                    \r\n                    {fightersList.map((it, index) => {\r\n                        return (\r\n                            <MenuItem key={`${index}`} value={it}>{it.name}</MenuItem>\r\n                        );\r\n                    })}\r\n                </Select>\r\n                {selectedFighter\r\n                    ? <div>\r\n                        <div>Name: {selectedFighter.name}</div>\r\n                        <div>Power: {selectedFighter.power}</div>\r\n                        <div>Defense: {selectedFighter.defense}</div>\r\n                        <div>Health: {selectedFighter.health}</div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </FormControl>\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\nimport image from \"./UI/versus.png\";\r\nconst ArenaComponent = ({\r\n  fighter1Name,\r\n  fighter2Name,\r\n  onKeyDown,\r\n  firstFighterBar,\r\n  secondFighterBar,\r\n  showDamage\r\n}) => {\r\n  return (\r\n    <div className=\"arena___root\" tabIndex=\"1\" onKeyDown={(e) => onKeyDown(e)}>\r\n      <div className=\"arena___fight-status\">\r\n        <div className=\"arena___fighter-indicator\">\r\n          <span className=\"arena___fighter-name\">{fighter1Name}</span>\r\n          <div className=\"arena___health-indicator\">\r\n            <div\r\n              className=\"arena___health-bar\"\r\n              id=\"left-fighter-indicator\"\r\n              ref={firstFighterBar}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"arena___versus-sign\">\r\n          <img src={image} alt=\"vs\" />\r\n          <div className=\"arena___damageBlock\" ref={showDamage}></div>\r\n        </div>\r\n\r\n        <div className=\"arena___fighter-indicator\">\r\n          <span className=\"arena___fighter-name\">{fighter2Name}</span>\r\n          <div className=\"arena___health-indicator\">\r\n            <div\r\n              className=\"arena___health-bar\"\r\n              id=\"right-fighter-indicator\"\r\n              ref={secondFighterBar}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"arena___battlefield\">\r\n        <div className=\"fighter-preview___root fighter-preview___left\">\r\n          <img\r\n            src=\"https://media.giphy.com/media/kdHa4JvihB2gM/giphy.gif\"\r\n            alt=\"fighter1\"\r\n            title={fighter1Name}\r\n            className=\"fighter-preview___img\"\r\n          />\r\n        </div>\r\n        <div className=\"fighter-preview___root fighter-preview___right arena___right-fighter\">\r\n          <img\r\n            src=\"https://i.pinimg.com/originals/46/4b/36/464b36a7aecd988e3c51e56a823dbedc.gif\"\r\n            alt=\"fighter2\"\r\n            title={fighter2Name}\r\n            className=\"fighter-preview___img\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArenaComponent;\r\n","import React from 'react'\r\nimport './showWinner.css';\r\n\r\nconst showWinner = ({ winner }) => {\r\n  const onClose = () => window.location.reload()\r\n  return (\r\n    <div className='modal-layer'>\r\n      <div className='modal-root'>\r\n        <div className='modal-header'>\r\n          <div className='modal-title'>\r\n            {`${winner.name} has won this time`}\r\n          </div>\r\n          <div className='close-btn' onClick={() => onClose()}> × </div>\r\n        </div>\r\n        <div className='modal-description'>\r\n          The game will be reloaded after you close modal window\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default showWinner\r\n","export const controls = {\r\n  PlayerOneAttack: 65, //A\r\n  PlayerOneBlock: 68, //D\r\n  PlayerTwoAttack: 74, //J\r\n  PlayerTwoBlock: 76, //L\r\n  PlayerOneCriticalHitCombination: [81, 87, 69], //q w e\r\n  PlayerTwoCriticalHitCombination: [85, 73, 79] //u i o\r\n}","import { get, post } from \"../requestHelper\";\r\n\r\nconst entity = 'fights';\r\n\r\nexport const getlog = async () => {\r\n    return await get(entity);\r\n}\r\n\r\nexport const sendLog = async (body) => {\r\n    return await post(entity, body);\r\n} ","function getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function getDamage(attacker, defender) {\r\n  const damage = getHitPower(attacker) - getBlockPower(defender);\r\n  return damage > 0 ? damage : 0;\r\n}\r\n\r\nexport function getHitPower(fighter) {\r\n  const criticalHitChance = getRandomArbitrary(0.2, 0.7) ;\r\n  const power = fighter.power * criticalHitChance;\r\n  return power;\r\n}\r\n\r\nexport function getBlockPower(fighter) {\r\n  const dodgeChance = Math.random() + 1;\r\n  const blockPower = fighter.defense * dodgeChance;\r\n  return blockPower;\r\n}\r\n\r\nexport function onKeydown(atacker, defender, fighterHealthLeft, showDamage, style) {\r\n  const damage = getDamage(atacker, defender);\r\n  showDamage.className = `arena___damageBlock ${style}`;\r\n  if (!damage) {\r\n    showDamage.innerHTML = 'Blocked';\r\n    return fighterHealthLeft;\r\n  } else {\r\n    showDamage.innerHTML = damage.toFixed(3);\r\n    fighterHealthLeft -= damage\r\n\r\n    return fighterHealthLeft > 0 ? fighterHealthLeft : 0;\r\n  }\r\n}\r\n\r\nexport function fighterHealthInPercents(target, fighter, healthBar) {\r\n  const barWidthInPercents = (target * 100) / fighter.health;\r\n  healthBar.style.width = `${barWidthInPercents}%`;\r\n}\r\n\r\nexport function criticalDamage(fighter, set, cooldown) {\r\n  const currentTime = Date.now();\r\n  if (currentTime - cooldown < 10000) {\r\n    set.clear();\r\n    return false;\r\n  }\r\n  let critical = 0;\r\n  if (fighter.power < 20) {\r\n    critical = fighter.power * 0.7\r\n  } else if (fighter.power < 60) {\r\n    critical = fighter.power * 0.5\r\n  } else {\r\n    critical = fighter.power * 0.3\r\n  }\r\n  cooldown = currentTime;\r\n  set.clear();\r\n  return {\r\n    critical,\r\n    cooldown\r\n  };\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport './arena.css';\r\nimport ArenaComponent from './ArenaComponent';\r\nimport ShowWinner from './showWinner';\r\nimport { controls } from './constants/controls';\r\nimport { sendLog } from '../../services/domainRequest/fightRequest';\r\nimport {\r\n  criticalDamage,\r\n  fighterHealthInPercents,\r\n  onKeydown\r\n} from './fightHelpers/fight';\r\n\r\nconst Arena = ({\r\n  fighter1,\r\n  fighter2\r\n}) => {\r\n  const TIMEOUT = 10000;\r\n  const [winner, setWinner] = useState(null);\r\n  const [log, setLog] = useState({\r\n    player: JSON.parse(localStorage.getItem('user')).email,\r\n    fightStartedAt: new Date(),\r\n    fighter1: fighter1.name,\r\n    fighter2: fighter2.name,\r\n    logging: ['Fight started']\r\n  });\r\n  const [fightersCooldown, setCooldown] = useState({\r\n    firstPlayerComboCooldown: Date.now() - TIMEOUT,\r\n    secondPlayerComboCooldown: Date.now() - TIMEOUT\r\n  })\r\n  const firstFighterBar = useRef(null);\r\n  const secondFighterBar = useRef(null);\r\n  const showDamage = useRef(null);\r\n  const pressed = new Set();\r\n  const {\r\n    PlayerOneAttack,\r\n    PlayerOneBlock,\r\n    PlayerTwoAttack,\r\n    PlayerTwoBlock,\r\n    PlayerOneCriticalHitCombination,\r\n    PlayerTwoCriticalHitCombination\r\n  } = controls;\r\n  const [q, w, e] = PlayerOneCriticalHitCombination,\r\n    [u, i, o] = PlayerTwoCriticalHitCombination;\r\n  const [fightersHealthLeft, setFightersHealthLeft] = useState({\r\n    firstFighterHealthLeft: +fighter1.health,\r\n    secondFighterHealthLeft: +fighter2.health\r\n  })\r\n  const sendLogs = (fighter) => {\r\n    setLog({\r\n      ...log,\r\n      logging: log.logging.push(`${fighter.name} has won this battle`)\r\n    })\r\n    sendLog(log)\r\n    return true;\r\n  }\r\n  const getWinner = (winner) => {\r\n    setWinner(fighter2);\r\n    return true;\r\n  } \r\n  const writeLog = (atacker, defender, healthLeft) => {\r\n    setLog({\r\n      ...log,\r\n      logging: [\r\n        ...log.logging,\r\n        `${atacker} makes damage, ${defender} ${healthLeft}% HP left`]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fighterHealthInPercents(fightersHealthLeft.firstFighterHealthLeft, fighter1, firstFighterBar.current);\r\n    writeLog(fighter2.name, fighter1.name, fightersHealthLeft.firstFighterHealthLeft);\r\n    fightersHealthLeft.firstFighterHealthLeft <= 0 && getWinner(fighter2) && sendLogs(fighter2) ;\r\n  }, [fightersHealthLeft.firstFighterHealthLeft])\r\n  useEffect(() => {\r\n    fighterHealthInPercents(fightersHealthLeft.secondFighterHealthLeft, fighter2, secondFighterBar.current);\r\n    writeLog(fighter1.name, fighter2.name, fightersHealthLeft.secondFighterHealthLeft);\r\n    fightersHealthLeft.secondFighterHealthLeft <= 0 && getWinner(fighter1)  && sendLogs(fighter1) ;\r\n  }, [fightersHealthLeft.secondFighterHealthLeft])\r\n\r\n  const onKeyDown = (event) => {\r\n    const { firstFighterHealthLeft, secondFighterHealthLeft } = fightersHealthLeft;\r\n    const { firstPlayerComboCooldown, secondPlayerComboCooldown } = fightersCooldown;\r\n    pressed.add(event.which);\r\n    let combo;\r\n    switch (true) {\r\n      case pressed.has(q) && pressed.has(w) && pressed.has(e):\r\n        combo = criticalDamage(fighter1, pressed, firstPlayerComboCooldown);\r\n        if (combo) {\r\n          setCooldown({\r\n            ...fightersCooldown,\r\n            firstPlayerComboCooldown: combo.cooldown\r\n          });\r\n          setFightersHealthLeft({\r\n            ...fightersHealthLeft,\r\n            secondFighterHealthLeft: fightersHealthLeft.secondFighterHealthLeft -= combo.critical\r\n          })\r\n        }\r\n        break;\r\n      case pressed.has(u) && pressed.has(i) && pressed.has(o):\r\n        combo = criticalDamage(fighter2, pressed, secondPlayerComboCooldown);\r\n        if (combo) {\r\n          setCooldown({\r\n            ...fightersCooldown,\r\n            secondPlayerComboCooldown: combo.cooldown\r\n          });\r\n          setFightersHealthLeft({\r\n            ...fightersHealthLeft,\r\n            firstFighterHealthLeft: fightersHealthLeft.firstFighterHealthLeft -= combo.critical\r\n          })\r\n        }\r\n        break;\r\n      case pressed.has(PlayerOneBlock):\r\n      case pressed.has(PlayerTwoBlock):\r\n        document.addEventListener('keyup', (event) => {\r\n          event.which === PlayerOneBlock && pressed.delete(PlayerOneBlock);\r\n          event.which === PlayerTwoBlock && pressed.delete(PlayerTwoBlock);\r\n        })\r\n        break;\r\n      case pressed.has(PlayerOneAttack):\r\n        setFightersHealthLeft({\r\n          ...fightersHealthLeft,\r\n          secondFighterHealthLeft: onKeydown(fighter1, fighter2, fightersHealthLeft.secondFighterHealthLeft, showDamage.current, 'arena___first-fighter-hit')\r\n        });\r\n        //    fightersHealthLeft.secondFighterHealthLeft <= 0 && setWinner(fighter1);\r\n        pressed.delete(PlayerOneAttack);\r\n        break;\r\n      case pressed.has(PlayerTwoAttack) && !pressed.has(PlayerTwoBlock):\r\n        setFightersHealthLeft({\r\n          ...fightersHealthLeft,\r\n          firstFighterHealthLeft: onKeydown(fighter2, fighter1, firstFighterHealthLeft, showDamage.current, 'arena___second-fighter-hit')\r\n        });\r\n        //    firstFighterHealthLeft <= 0 && setWinner(fighter2);\r\n        pressed.delete(PlayerTwoAttack);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    {winner && <ShowWinner winner={winner} />}\r\n    <ArenaComponent\r\n      onKeyDown={onKeyDown}\r\n      firstFighterBar={firstFighterBar}\r\n      secondFighterBar={secondFighterBar}\r\n      showDamage={showDamage}\r\n      fighter1Name={fighter1.name}\r\n      fighter2Name={fighter2.name} />\r\n  </>)\r\n}\r\n\r\nexport default Arena;\r\n","import React from \"react\";\r\n\r\nimport { getFighters } from \"../../services/domainRequest/fightersRequest\";\r\nimport NewFighter from \"../newFighter\";\r\nimport Fighter from \"../fighter\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Arena from \"../arena\";\r\nimport \"./fight.css\";\r\n\r\nclass Fight extends React.Component {\r\n  state = {\r\n    fighters: [],\r\n    fighter1: null,\r\n    fighter2: null,\r\n    fightStarted: false,\r\n    warning: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fighters = await getFighters();\r\n    if (fighters && !fighters.error) {\r\n      this.setState({ fighters });\r\n    }\r\n  }\r\n\r\n  onFightStart = () => {\r\n    const { fighter1, fighter2 } = this.state;\r\n    fighter1 && fighter2\r\n      ? this.setState({\r\n          fightStarted: true,\r\n          warning: null\r\n        })\r\n      : this.setState({\r\n          warning:\r\n            \"Сначала выберите персонажей, если список пуст - создайте их\",\r\n        });\r\n  };\r\n\r\n  onCreate = (fighter) => {\r\n    this.setState({ fighters: [...this.state.fighters, fighter] });\r\n  };\r\n\r\n  onFighter1Select = (fighter1) => {\r\n    this.setState({ fighter1 });\r\n  };\r\n\r\n  onFighter2Select = (fighter2) => {\r\n    this.setState({ fighter2 });\r\n  };\r\n\r\n  getFighter1List = () => {\r\n    const { fighter2, fighters } = this.state;\r\n    if (!fighter2) {\r\n      return fighters;\r\n    }\r\n\r\n    return fighters.filter((it) => it.id !== fighter2.id);\r\n  };\r\n\r\n  getFighter2List = () => {\r\n    const { fighter1, fighters } = this.state;\r\n    if (!fighter1) {\r\n      return fighters;\r\n    }\r\n\r\n    return fighters.filter((it) => it.id !== fighter1.id);\r\n  };\r\n\r\n  render() {\r\n    const { fighter1, fighter2, fightStarted, warning } = this.state;\r\n    return (\r\n      <>\r\n        {warning && !fightStarted && (\r\n          <div className=\"preview-warning\">{warning}</div>\r\n        )}\r\n        {fightStarted ? (\r\n          <Arena fighter1={fighter1} fighter2={fighter2} />\r\n        ) : (\r\n          <div id=\"wrapper\">\r\n            <NewFighter onCreated={this.onCreate} />\r\n            <div id=\"figh-wrapper\">\r\n              <Fighter\r\n                selectedFighter={fighter1}\r\n                onFighterSelect={this.onFighter1Select}\r\n                fightersList={this.getFighter1List() || []}\r\n              />\r\n              <div className=\"btn-wrapper\">\r\n                <Button\r\n                  onClick={this.onFightStart}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Start Fight\r\n                </Button>\r\n              </div>\r\n              <Fighter\r\n                selectedFighter={fighter2}\r\n                onFighterSelect={this.onFighter2Select}\r\n                fightersList={this.getFighter2List() || []}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fight;\r\n","import { unsetLoginSession } from \"../../services/authService\";\r\nimport React from 'react';\r\nimport './signOut.css';\r\n\r\nexport default function SignOut({ isSignedIn, onSignOut}) {\r\n    const signOut = () => {\r\n        unsetLoginSession();\r\n        onSignOut();\r\n    }\r\n\r\n    if(isSignedIn) {\r\n        return (\r\n            <div onClick={signOut} id=\"sign-out\">Sign out</div>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}","import * as React from 'react';\r\nimport SignInUpPage from '../signInUpPage';\r\nimport { isSignedIn } from '../../services/authService';\r\nimport Fight from '../fight';\r\nimport SignOut from '../signOut';\r\n\r\nclass StartScreen extends React.Component {\r\n    state = {\r\n        isSignedIn: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setIsLoggedIn(isSignedIn());\r\n    }\r\n\r\n    setIsLoggedIn = (isSignedIn) => {\r\n        this.setState({ isSignedIn });\r\n    }\r\n\r\n    render() {\r\n        const { isSignedIn } = this.state;\r\n        if (!isSignedIn) {\r\n            return <SignInUpPage setIsLoggedIn={this.setIsLoggedIn} />\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Fight />\r\n                <SignOut isSignedIn={isSignedIn} onSignOut={() => this.setIsLoggedIn(false)} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartScreen;","import React from 'react';\r\nimport StartScreen from './components/startScreen'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <MuiThemeProvider >\r\n      <StartScreen />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />\r\n // </React.StrictMode>\r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}